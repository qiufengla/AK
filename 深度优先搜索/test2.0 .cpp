/*
题目描述
已知一N×N的迷宫，允许往上、下、左、右四个方向行走，且迷宫中没有任何障碍，所有的点都可以走。现请你按照右、下、左、上顺序进行搜索，找出从左上角到右下角的所有路径。
输入
输入一个整数N（N<=5）代表迷宫的大小。
输出
按右、下、左、上搜索顺序探索迷宫，输出从左上角1,1点走到右下角N,N点的所有可能的路径。
样例输入 Copy
3
样例输出 Copy
1:1,1->1,2->1,3->2,3->3,3
2:1,1->1,2->1,3->2,3->2,2->3,2->3,3
3:1,1->1,2->1,3->2,3->2,2->2,1->3,1->3,2->3,3
4:1,1->1,2->2,2->2,3->3,3
5:1,1->1,2->2,2->3,2->3,3
6:1,1->1,2->2,2->2,1->3,1->3,2->3,3
7:1,1->2,1->2,2->2,3->3,3
8:1,1->2,1->2,2->3,2->3,3
9:1,1->2,1->2,2->1,2->1,3->2,3->3,3
10:1,1->2,1->3,1->3,2->3,3
11:1,1->2,1->3,1->3,2->2,2->2,3->3,3
12:1,1->2,1->3,1->3,2->2,2->1,2->1,3->2,3->3,3

*/
#include <bits/stdc++.h>
#include<math.h>
#include<cstring>
#include<string.h>
using namespace std;
const int MX=10000; 
int T,n,m,cnt=0,num,l,mx=0,mn=INT_MAX;
int a[MX+10],s2[MX+10];
int fx[5]={0,0,1,0,-1};
int fy[5]={0,1,0,-1,0};
int r[20][3];
bool f[10][10];
 
void print(int k)
{
    cnt++;
    cout<<cnt<<":";
    for(int i=1;i<k;i++)
    {
        cout<<r[i][1]<<","<<r[i][2]<<"->";
    }
    cout<<n<<","<<n<<'\n';
}
 
void fun(int x,int y,int k)
{
    r[k][1]=x;
    r[k][2]=y;
    if(x==n&&y==n)
    {
        print(k);
        return;
    }
    int tx,ty;
    for(int i=1;i<=4;i++)
    {
        tx=x+fx[i];
        ty=y+fy[i];
        if(tx>=1&&tx<=n&&ty>=1&&ty<=n&&f[tx][ty]==false)
        {
            f[tx][ty]=true;
            fun(tx,ty,k+1);
            f[tx][ty]=false;
        }
    }
}
 
 
int main()
{
    cin>>n;
    f[1][1]=true;
    fun(1,1,1);
     
    return 0;    
}
/**************************************************************
    Problem: 23865
    User: 2024JK070430
    Language: C++
    Result: 正确
    Time:35 ms
    Memory:2300 kb
****************************************************************/