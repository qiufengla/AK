/*
题目描述
伯罗奔尼撒战争是以雅典为首的提洛同盟与以斯巴达为首的伯罗奔尼撒联盟之间的一场战争。这场战争从前431年一直持续到前404年，使得绝大多数周边城邦必须加入其中一方的阵营。战争第一阶段（BC431-BC421），雅典在伯里克利的领导之下，凭借强大的海军，采取陆地上防御在海上进攻的策略。而斯巴达在阿基达摩斯二世的领导之下，率领它令人畏惧的战士进行陆地强攻。两个强邦侧重点不同的军事力量导致了战争第一阶段的僵持局面。

话说，有一天阿基达摩斯二世决定率兵进攻雅典的一个居民点阿提卡，当他们满怀斗志的奔向阿提卡的时候，殊不知他们正走向伯利克里所设下的迷宫陷阱之中。当他们发现时，已为时已晚。

As you know, the Magpie Festival is comging!

为了早日返回斯巴达，阿基达摩斯二世立即让所有的斯巴达勇士去需找迷宫的出口E。现在他们被困在迷宫的S点，迷宫中“.”表示空地，可以通过，“#”表示墙，不能通过，每次只能向上下左右四个方向移动，每个勇士每移动一个单位距离需要耗费一个单位时间，所有斯巴达勇士的移动速度和方向相同。现在请你计算一下他们所有人要找到迷宫的出口，最短需要时间之和是多少。

PS：假设迷宫中每个点可以容纳的人数没有限制。

输入
第一行输入三个数n,m, c,(2=<m<=n<=500,100=<c<=10000)分别代表迷宫的长度和宽度，以及被困迷宫的斯巴达勇士数（不包括阿基达摩斯二世）。

下面m行每行有n个字符用来表示迷宫地图。

详细输入格式见样例。

输出
输出一个整数，表示找到迷宫出口时，所有勇士消耗的最短时间之和，如不能找到出口输入-1。
样例输入 Copy
5 5 100
#####
#S..#
#...#
#...E
#####
样例输出 Copy
500
*/
#include <bits/stdc++.h>
#include<math.h>
#include<cstring>
#include<string.h>
using namespace std;
const int MX=1000; 
char a[MX+10][MX+10];
int q[1000010][4];
int n,m,tx,ty,k=1,s1,s2,e1,e2,cnt;
int head=1,tail=1;
int fx[5]={0,0,1,0,-1};
int fy[5]={0,1,0,-1,0};
bool f[MX+10][MX+10];
 
 
int main()
{
    cin>>n>>m>>k;
    for(int i=1;i<=n;i++)
    {
        for(int j=1;j<=m;j++)
        {
            cin>>a[i][j];
            if(a[i][j]=='S')
            {
                s1=i;
                s2=j;
            }
            if(a[i][j]=='E')
            {
                e1=i;
                e2=j; 
            }
        }
    }
//  for(int i=1;i<=n;i++)
//  {
//      for(int j=1;j<=m;j++)
//      {
//          if(a[i][j]=='*')
//      }
//  }
    q[1][1]=s1;
    q[1][2]=s2;
    q[1][3]=0;
    while(head<=tail)
    {
        for(int i=1;i<=4;i++)
        {
            tx=q[head][1]+fx[i];
            ty=q[head][2]+fy[i];
            if(tx>=1&&tx<=n&&ty>=1&&ty<=m&&(a[tx][ty]=='.'||a[tx][ty]=='E'))
            {
                tail++;
                q[tail][1]=tx;
                q[tail][2]=ty;
                q[tail][3]=q[head][3]+1;
                a[tx][ty]='#';
                if(tx==e1&&ty==e2)
                {
                    cout<<q[tail][3]*k;
                    return 0;
                }
            }
        }
        head++;
    }
    cout<<-1<<'\n';
    return 0;    
}
/**************************************************************
    Problem: 23883
    User: 2024JK070430
    Language: C++
    Result: 正确
    Time:20 ms
    Memory:19840 kb
****************************************************************/
